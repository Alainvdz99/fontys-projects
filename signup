package main

import (
	"database/sql"
	"net/http"

	_ "github.com/go-sql-driver/mysql"
	"golang.org/x/crypto/bcrypt"
)

func dbConn() (db *sql.DB) {
	dbDriver := "mysql"
	dbUser := "root"
	dbPass := "vita"
	dbName := "vitaintellectdb"
	db, err := sql.Open(dbDriver, dbUser+":"+dbPass+"@/"+dbName)
	if err != nil {
		panic(err.Error())
	}
	return db
}

var (
	err error
)

func loginPage(res http.ResponseWriter, req *http.Request) {
	if req.Method != "POST" {
		http.ServeFile(res, req, "login.html")
		return
	}

	username := req.FormValue("username")
	password := req.FormValue("password")

	var (
		databaseUsername string
		databasePassword string
		Mnr              int
	)

	db := dbConn()
	err := db.QueryRow("SELECT voorletters, achternaam, medewerkernummer, datum_in_dienst FROM medewerkers WHERE werknemernummer=?", username).Scan(&databaseUsername, &databasePassword, &Mnr)
	if err != nil {
		http.Redirect(res, req, "/index", 301)
		return
	}

	err = bcrypt.CompareHashAndPassword([]byte(databasePassword), []byte(password))
	if err != nil {
		http.Redirect(res, req, "/login", 301)
		return
	}
	res.Write([]byte("Hello" + databaseUsername))
}

func homePage(res http.ResponseWriter, req *http.Request) {
	db := dbConn()
	nMnr := req.URL.Query().Get("medewerkernummer")
	selDB, err := db.Query("SELECT * FROM medewerker WHERE medewerkernummer=?", nMnr)
	if err != nil {
		panic(err.Error())
	}
	for selDB.Next() {
		var medewerkernummer int
		var voorletters, achternaam string
		err = selDB.Scan(&medewerkernummer, &voorletters, &achternaam)
		if err != nil {
			panic(err.Error())
		}
	}
	http.ServeFile(res, req, "Index.html")
	defer db.Close()
}

func main() {
	db := dbConn()
	if err != nil {
		panic(err.Error())
	}
	defer db.Close()

	err = db.Ping()
	if err != nil {
		panic(err.Error())
	}

	http.HandleFunc("/", loginPage)
	http.HandleFunc("/Index", homePage)
	http.ListenAndServe(":8080", nil)
}
